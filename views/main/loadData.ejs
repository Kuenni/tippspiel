<script src="https://ajax.googleapis.com/ajax/libs/jquery/1.11.3/jquery.min.js"></script>

<h1>Load Data into DB</h1>

<div id="select-season">
	<select>
		<option value="2015/2016">2015/2016</option>
		<option value="2016/2017">2016/2017</option>
		<option value="2017/2018">2017/2018</option>
		<option value="2018/2019">2018/2019</option>
	</select>
	<form id='file-selector'>
		<input type='file' id='userFile'>
		<br>
		<input type='submit' id='upload_btn' value='upload'>
	</form>
</div>
<div id="output">

</div>
<script>
	$("#upload_btn").click(function(e) {// changed
		e.preventDefault();
		var formData = new FormData();
		var error = 0;
		var file = $("#userFile")[0].files[0];
		var filetoString = file.toString();
		if (!file.type.match('json')) {
			// Check for File type. the 'type' property is a string, it facilitates usage if match() function to do the matching
			$("#output").html("<p>Images only. Select another file</p>");
			error = 1;
		} else if (file.size > 1048576) {
			// File size is provided in bytes
			$("#output").html("<p>Too large Payload ( < 1 Mb). Select another file</p>");
			error = 1;
		} else {
			// If all goes well, append the up-loadable file to FormData object
			// Comparing it to a standard form submission the 'image' will be name of input
		}
		formData.append('jsonfile', file, file.name);

		if (error) {
			return false;
		}
		$.ajax({
			type : "POST",
			url : "/addToDatabase",
			data : formData, // changed
			processData : false, // tell jQuery not to process the data
			contentType : false, // tell jQuery not to set contentType
			success : function(data) {
				alert("success");
				// show response from the php script.
			},
			fail : function() {
				alert("asdfadsfadf");
			}
		});
		return false;
		// avoid to execute the actual submit of the form.
	});

</script>